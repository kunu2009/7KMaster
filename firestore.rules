rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /projects/{projectId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /skills/{skillId} {
      // Allow read for backward compatibility (older docs might not have userId)
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || !('userId' in resource.data));
      allow update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /notes/{noteId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /todayTasks/{taskId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /timeBlocks/{blockId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /habits/{habitId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /habitLogs/{logId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /selfSpace/{itemId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /researchItems/{itemId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /userMetrics/{userId} {
      allow read, update, create, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}
