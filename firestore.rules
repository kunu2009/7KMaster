
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Checks if the requesting user is the owner of the document.
    // For reads/updates, it checks the existing data.
    // For creates, it checks the incoming data.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    match /projects/{projectId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /skills/{skillId} {
      // Allow reading older docs without userId for backward compatibility
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || !('userId' in resource.data));
      allow update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /notes/{noteId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /todayTasks/{taskId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /timeBlocks/{blockId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /habits/{habitId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    match /habitLogs/{logId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /selfSpace/{itemId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /researchItems/{itemId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
     match /userMetrics/{userId} {
      // This collection uses the userId as the documentId
      allow read, write: if isOwner(userId);
    }
  }
}
